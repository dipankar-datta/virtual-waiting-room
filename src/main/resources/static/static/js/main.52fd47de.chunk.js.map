{"version":3,"sources":["components/home.tsx","components/waiting-room.tsx","App.tsx","index.tsx"],"names":["Home","className","React","Component","WaitingRoom","props","STRESS_CHECK_PATH","RECHECK_PERIOD","intervalRef","redirectBack","state","redirectUrl","clearInterval","window","location","replace","checkApplicationStressStatus","recheckPeriod","setState","url","redirectHostname","fetch","then","res","json","status","setErrorMessage","catch","err","coloredStatus","recheckMessages","Object","assign","messagePrefix","length","Date","toLocaleTimeString","role","push","stopRecheck","rechecking","startRecheck","setInterval","redirectInfo","URLSearchParams","this","search","get","atob","JSON","parse","URL","origin","style","padding","type","onClick","marginTop","slice","reverse","map","message","index","App","backgroundColor","height","color","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52fd47de.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\nexport default class Home extends React.Component<any, any> {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"horizontal-center\">\r\n        <h2></h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport '../App.css';\r\n\r\ninterface WaitingRoomState {\r\n  recheckPeriod: number;\r\n  redirectUrl?: string;\r\n  redirectHostname?: string;\r\n  recheckStatus?: string;\r\n  recheckMessages: any[];\r\n  rechecking: boolean;\r\n}\r\n\r\nexport default class WaitingRoom extends React.Component<any, WaitingRoomState> {\r\n\r\n  private readonly STRESS_CHECK_PATH = '/api/can_serve';\r\n\r\n  private readonly RECHECK_PERIOD = 5;\r\n\r\n  private intervalRef : any;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      recheckPeriod: this.RECHECK_PERIOD,\r\n      recheckMessages: [],\r\n      rechecking: true\r\n    };\r\n  }  \r\n\r\n  redirectBack = () => {\r\n    if (this.state.redirectUrl) {\r\n      clearInterval(this.intervalRef);\r\n      window.location.replace(this.state.redirectUrl);\r\n    }    \r\n  }\r\n\r\n  componentDidMount() {\r\n    const query = new URLSearchParams(this.props.location.search);\r\n    let redirectInfo: any = query.get('redirectInfo');\r\n    if (redirectInfo) {\r\n      redirectInfo = atob(redirectInfo);\r\n      redirectInfo = JSON.parse(redirectInfo);\r\n    }\r\n    const redirectUrl =  redirectInfo['redirectUrl'];\r\n    const redirectHostname = new URL(redirectUrl).origin\r\n    this.setState({...this.state, redirectUrl, redirectHostname}) ;\r\n    this.startRecheck();\r\n  }\r\n\r\n  checkApplicationStressStatus = () => {\r\n\r\n    if (this.state.recheckPeriod > 0) {\r\n      this.setState({...this.state, recheckPeriod: (this.state.recheckPeriod - 1)})\r\n    } else if (this.state.recheckPeriod === 0) {\r\n      \r\n      const url = this.state.redirectHostname + this.STRESS_CHECK_PATH;\r\n      fetch(url)\r\n      .then((res: Response) => {\r\n        res.json().then((status: boolean) => {\r\n          if (status) {           \r\n            clearInterval(this.intervalRef);\r\n            this.redirectBack();\r\n          } else {\r\n            this.setErrorMessage('BUSY');\r\n          }\r\n        })\r\n      }).catch(err => {\r\n        this.setErrorMessage('FAILED');\r\n      });\r\n    } \r\n  }\r\n\r\n  setErrorMessage = (status: 'SUCCESS' | 'BUSY' | 'FAILED') => {\r\n    const recheckMessages = Object.assign([], this.state.recheckMessages);\r\n    const messagePrefix =  (recheckMessages.length + 1) \r\n                          + ' - Last checked at: ' \r\n                          + (new Date().toLocaleTimeString()) \r\n                          + ' - Status: ' + status;\r\n    let coloredStatus;\r\n    switch(status) {\r\n      case 'FAILED' : coloredStatus = <div className=\"alert alert-danger\" role=\"alert\">{messagePrefix}</div>; break;\r\n      case 'BUSY' : coloredStatus = <div className=\"alert alert-info\" role=\"alert\">{messagePrefix}</div>; break;\r\n      case 'SUCCESS' : coloredStatus = <div className=\"alert alert-success\" role=\"alert\">{messagePrefix}</div>; break;\r\n    }\r\n    const statusMessage = + coloredStatus;\r\n    recheckMessages.push(coloredStatus);\r\n    this.setState({...this.state, recheckMessages, recheckPeriod: this.RECHECK_PERIOD})\r\n  }\r\n\r\n  stopRecheck = () => {\r\n    clearInterval(this.intervalRef);\r\n    this.setState({...this.state, rechecking: false});\r\n  }\r\n\r\n  startRecheck = () => {\r\n    this.intervalRef = setInterval(this.checkApplicationStressStatus, 1000);\r\n    this.setState({...this.state, rechecking: true, recheckPeriod: this.RECHECK_PERIOD});\r\n  }\r\n  \r\n  render() {    \r\n  \r\n    return (\r\n      <div>\r\n          <div>\r\n            <h3>Resource Busy</h3>\r\n            <p>Your requested application is currently busy. Once the requested application is available, you will be redirected back.</p>\r\n          </div>\r\n          <h6>Requested application URL: {this.state.redirectUrl}</h6>          \r\n          <div className='horizontal-center' style={{padding: \"20px\"}}>\r\n            <div className='horizontal-center'>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={this.redirectBack} >Go Back</button> &nbsp;&nbsp;\r\n\r\n            {\r\n              this.state.rechecking ? \r\n              <button  type=\"button\" className=\"btn btn-danger\" onClick={this.stopRecheck} >Stop Recheck</button>\r\n              :\r\n              <button  type=\"button\" className=\"btn btn-danger\" onClick={this.startRecheck} >Start Recheck</button>\r\n            }\r\n            \r\n            </div>\r\n            \r\n            <div className='horizontal-center'>\r\n              <h6>Only for demonstration</h6>\r\n            </div>            \r\n          </div>       \r\n          {this.state.rechecking ? \r\n            <h6>Next Application status check in - {this.state.recheckPeriod} seconds</h6> : ''\r\n          }  \r\n          \r\n          {this.state.recheckMessages.length > 0 ? \r\n            (\r\n              <div style={{marginTop: \"20px\"}}>\r\n                <table>\r\n                <tbody>\r\n                  {this.state.recheckMessages.slice().reverse().map((message, index) => \r\n                  <tr><td>{message} </td></tr>)}\r\n                </tbody>\r\n                </table>              \r\n              </div>\r\n            ) : ''            \r\n          } \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Switch, Route} from 'react-router-dom';\nimport Home from './components/home';\nimport WaitingRoom from './components/waiting-room';\n\nexport default class App extends React.Component<any, any> {\n  \n  render() {\n    return (\n      <div >\n          <div style={{backgroundColor: \"black\", height: \"55px\"}}>\n            <div className='horizontal-center'>\n              <h3 style={{color: \"cornsilk\", marginTop: \"10px\"}}>Virtual Waiting Room</h3>\n            </div>\n          </div>\n\n          <div style={{padding: \"20px 20px\"}}>\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/wait\" component={WaitingRoom} />\n            </Switch>\n          </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}