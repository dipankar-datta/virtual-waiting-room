{"version":3,"sources":["components/home.tsx","components/waiting-room.tsx","App.tsx","index.tsx"],"names":["Home","className","React","Component","WaitingRoom","props","STRESS_CHECK_PATH","RECHECK_PERIOD","intervalRef","redirectBack","state","redirectUrl","clearInterval","window","location","replace","checkApplicationStressStatus","recheckPeriod","setState","url","redirectHostname","fetch","then","res","json","status","setErrorMessage","catch","err","recheckMessages","Object","assign","statusMessage","Date","toLocaleTimeString","push","stopRecheck","rechecking","startRecheck","setInterval","redirectInfo","URLSearchParams","this","search","get","JSON","parse","URL","origin","style","fontSize","onClick","length","slice","reverse","map","message","index","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad4cb8fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\nexport default class Home extends React.Component<any, any> {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"horizontal-center\">\r\n        <h2></h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport '../App.css';\r\n\r\ninterface WaitingRoomState {\r\n  recheckPeriod: number;\r\n  redirectUrl?: string;\r\n  redirectHostname?: string;\r\n  recheckStatus?: string;\r\n  recheckMessages: string[];\r\n  rechecking: boolean;\r\n}\r\n\r\nexport default class WaitingRoom extends React.Component<any, WaitingRoomState> {\r\n\r\n  private readonly STRESS_CHECK_PATH = '/api/can_serve';\r\n\r\n  private readonly RECHECK_PERIOD = 5;\r\n\r\n  private intervalRef : any;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      recheckPeriod: this.RECHECK_PERIOD,\r\n      recheckMessages: [],\r\n      rechecking: true\r\n    };\r\n  }  \r\n\r\n  redirectBack = () => {\r\n    if (this.state.redirectUrl) {\r\n      clearInterval(this.intervalRef);\r\n      window.location.replace(this.state.redirectUrl);\r\n    }    \r\n  }\r\n\r\n  componentDidMount() {\r\n    const query = new URLSearchParams(this.props.location.search);\r\n    let redirectInfo: any = query.get('redirectInfo');\r\n    if (redirectInfo) {\r\n      redirectInfo = JSON.parse(redirectInfo);\r\n    }\r\n    const redirectUrl =  redirectInfo['redirectUrl'];\r\n    const redirectHostname = new URL(redirectUrl).origin\r\n    this.setState({...this.state, redirectUrl, redirectHostname}) ;\r\n    this.startRecheck();\r\n  }\r\n\r\n  checkApplicationStressStatus = () => {\r\n\r\n    if (this.state.recheckPeriod > 0) {\r\n      this.setState({...this.state, recheckPeriod: (this.state.recheckPeriod - 1)})\r\n    } else if (this.state.recheckPeriod === 0) {\r\n      \r\n      const url = this.state.redirectHostname + this.STRESS_CHECK_PATH;\r\n      fetch(url)\r\n      .then((res: Response) => {\r\n        res.json().then((status: boolean) => {\r\n          if (status) {           \r\n            clearInterval(this.intervalRef);\r\n            this.redirectBack();\r\n          } else {\r\n            this.setErrorMessage('BUSY');\r\n          }\r\n        })\r\n      }).catch(err => {\r\n        this.setErrorMessage('FAILED');\r\n      });\r\n    } \r\n  }\r\n\r\n  setErrorMessage = (status: 'SUCCESS' | 'BUSY' | 'FAILED') => {\r\n    const recheckMessages = Object.assign([], this.state.recheckMessages);\r\n    const statusMessage = 'Last checked at: ' + (new Date().toLocaleTimeString()) + ' - Status: ' + status;\r\n    recheckMessages.push(statusMessage);\r\n    this.setState({...this.state, recheckMessages, recheckPeriod: this.RECHECK_PERIOD})\r\n  }\r\n\r\n  stopRecheck = () => {\r\n    clearInterval(this.intervalRef);\r\n    this.setState({...this.state, rechecking: false});\r\n  }\r\n\r\n  startRecheck = () => {\r\n    this.intervalRef = setInterval(this.checkApplicationStressStatus, 1000);\r\n    this.setState({...this.state, rechecking: true, recheckPeriod: this.RECHECK_PERIOD});\r\n  }\r\n  \r\n  render() {    \r\n  \r\n    return (\r\n      <div >\r\n          <h2>Your requested application is currently facing excessive load.</h2>\r\n          <h2>Your requested application URL: {this.state.redirectUrl}</h2>          \r\n          <div className='horizontal-center'>\r\n            <div className='horizontal-center'>\r\n            <button  style={{fontSize: \"16px\"}} onClick={this.redirectBack} >Go Back</button> &nbsp;&nbsp;\r\n\r\n            {\r\n              this.state.rechecking ? \r\n              <button  style={{fontSize: \"16px\"}} onClick={this.stopRecheck} >Stop Recheck</button>\r\n              :\r\n              <button  style={{fontSize: \"16px\"}} onClick={this.startRecheck} >Start Recheck</button>\r\n            }\r\n            \r\n            </div>\r\n            \r\n            <div className='horizontal-center'>\r\n              <label>Just for demonstration</label>\r\n            </div>            \r\n          </div>       \r\n          {this.state.rechecking ? \r\n            <h3>Next Application status check in {this.state.recheckPeriod} seconds</h3> : ''\r\n          }  \r\n          \r\n          {this.state.recheckMessages.length > 0 ? \r\n            (<table>\r\n              <tbody>\r\n                {this.state.recheckMessages.slice().reverse().map((message, index) => \r\n                <tr>{(this.state.recheckMessages.length - index)} - {message}</tr>)}\r\n              </tbody>\r\n            </table>\r\n            ) : ''\r\n          } \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Switch, Route} from 'react-router-dom';\nimport Home from './components/home';\nimport WaitingRoom from './components/waiting-room';\n\nexport default class App extends React.Component<any, any> {\n  \n  render() {\n    return (\n      <div >\n          <div className='horizontal-center'><h2>Virtual Waiting Room</h2></div>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/wait\" component={WaitingRoom} />\n          </Switch>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}